// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareOwnerControl.DAL.Context;

namespace ShareOwnerControl.DAL.Migrations
{
    [DbContext(typeof(ShareOwnerControlDbContext))]
    partial class ShareOwnerControlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShareOwnerControl.Models.Holding", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("Holding");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.Share", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("ForSale")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Share");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.ShareHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortfolioValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShareHolder");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.Holding", b =>
                {
                    b.HasOne("ShareOwnerControl.Models.ShareHolder", "ShareHolder")
                        .WithMany("Holdings")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareOwnerControl.Models.Stock", "Stock")
                        .WithMany("Holdings")
                        .HasForeignKey("StockId");

                    b.Navigation("ShareHolder");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.Share", b =>
                {
                    b.HasOne("ShareOwnerControl.Models.Holding", "Holding")
                        .WithMany("Shares")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareOwnerControl.Models.Stock", "Stock")
                        .WithMany("Shares")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holding");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.Holding", b =>
                {
                    b.Navigation("Shares");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.ShareHolder", b =>
                {
                    b.Navigation("Holdings");
                });

            modelBuilder.Entity("ShareOwnerControl.Models.Stock", b =>
                {
                    b.Navigation("Holdings");

                    b.Navigation("Shares");
                });
#pragma warning restore 612, 618
        }
    }
}
